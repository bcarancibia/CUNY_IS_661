predictions <- knn(df2, 5)
k.nearest.neighbors(10, d, 10)
knn <- function(df, k = 5)
{
distance <- as.matrix(dist(df[,1:2]))
predictions <- rep(0, nrow(df))
# For every point in the dataset
for (i in 1:nrow(df))
{
indices <- k.nearest.neighbors(i, distance, k = k)  # Get the nearest neighbors
predictions[i] <- ifelse(mean(df[indices, 'Label']) > 0.5, 1, 0)
# If > 0.5, then this is in class "1"
}
return(predictions)
}
predictions <- knn(df2, 5)
warnings()
k.nearest.neighbors <- function(i, distance.matrix, k = 5)
{
ordered.neighbors <- order(distance.matrix[i, ])
# This just gives us the list of points that are
# closest to row i in descending order.
# The first entry is always 0 (the closest point is the point itself) so
# let's ignore that entry and return points 2:(k+1) instead of 1:k
return(ordered.neighbors[2:(k + 1)])
}
k.nearest.neighbors(10, d, 10)
knn <- function(df, k = 5)
{
distance <- as.matrix(dist(df[,1:2]))
predictions <- rep(0, nrow(df))
# For every point in the dataset
for (i in 1:nrow(df))
{
indices <- k.nearest.neighbors(i, distance, k = k)  # Get the nearest neighbors
predictions[i] <- ifelse(mean(df[indices, 'Label']) > 0.5, 1, -1)
# If > 0.5, then this is in class "1"
}
return(predictions)
}
predictions <- knn(df2, 5)
k.nearest.neighbors <- function(i, distance.matrix, k = 5)
{
ordered.neighbors <- order(distance.matrix[i, ])   # closest to row i in descending order.
return(ordered.neighbors[2:(k + 1)])
}
k.nearest.neighbors(10, d, 10)
knn <- function(df, k = 5)
{
distance <- as.matrix(dist(df[,1:2]))
predictions <- rep(0, nrow(df))
# For every point in the dataset
for (i in 1:nrow(df))
{
indices <- k.nearest.neighbors(i, distance, k = k)  # Get the nearest neighbors
predictions[i] <- ifelse(mean(df[indices, 'Class']) > 0.5, 1, -1)   # If > 0.5, then this is in class "1"
}
return(predictions)
}
predictions <- knn(df2, 5)
df2$predictions <- predictions
sum(df2$Label != df2$predictions)
View(df2_train)
sum(df2_train$Label != df2_train$predictions)
predictions <- knn(df2_train, 5)
df2_train$predictions <- predictions
sum(df2_train$Label != df2_train$predictions)
predictions <- knn(df2, 5)
df2$predictions <- predictions
sum(df2$Label != df2$predictions)
View(df2)
predictions <- knn(df2, 5)
df2$predictions <- predictions
sum(df2$Class != df2$predictions)
predictions <- knn(df2_train, 5)
df2_train$predictions <- predictions
sum(df2_train$Class != df2_train$predictions)
classifier <- naiveBayes(Class ~ Cat1 + Cat2 + Cat3, data = df)
test <- unique(df)
test$Prediction <- predict(classifier, test)
test
classifier <- naiveBayes(Class ~ Cat1 + Cat2 + Cat3, data = df2)
test <- unique(df2)
test$Prediction <- predict(classifier, test)
test
df3 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/sample-testing-data-nearest-neighbor.csv', header=TRUE)
df4 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/sample-training-data-nearest-neighbor.csv', header=TRUE)
df1 <- read.csv("/users/bcarancibia/CUNY_IS_621/Week3/data/sample-training-data-naive-bayes.csv")
df2 <- data.table(read.table('/users/bcarancibia/CUNY_IS_621/Week3/data/sample-testing-data-naive-bayes.csv', header=TRUE))
classifier <- naiveBayes(Class ~ Cat1 + Cat2 + Cat3, data = df)
test <- unique(df)
test$Prediction <- predict(classifier, test)
test
classifier <- naiveBayes(Class ~ Cat1 + Cat2 + Cat3, data = df2)
test <- unique(df2)
test$Prediction <- predict(classifier, test)
test
classifier <- naiveBayes(Class ~ Cat1 + Cat2 + Cat3, data = df1)
test <- unique(df)
test$Prediction <- predict(classifier, test)
test
classifier <- naiveBayes(Class ~ Cat1 + Cat2 + Cat3, data = df2)
test <- unique(df2)
test$Prediction <- predict(classifier, test)
test
install.packages("class")
install.packages("class")
require(class)
View(df3)
cl <- df3$Class
require(class)
train <- df3
test <- df4
cl <- df3$Class
knn(train, test, cl, k=5, prob=TRUE)
knn(train, test, cl, k=5,)
knn(train, test, cl, k=5)
knn(train, test, k=5)
knn(train0
knn(train)
knn(train)
knn(train, test)
attribute(.Last.value)
attributes(.Last.value)
knn(train, test)
train <- cbind(df3, df4)
model.knn <- knn(train=train, test=train, cl=Class, k=5, prob=T)
knn_predict <- knn(df3, df4, k=19)
knn_predict <- knn(df3, k=19)
knn_predict[1:3]
knn_predict <- knn(df3, k=5)
table(knn_predict, df3 )
table(knn_predict, df3)
df5 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/jury-training-data.csv', header=TRUE)
df6 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/jury-learning-data-public.csv', header=TRUE)
df7 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/jury-learning-data-private.csv', header=TRUE)
View(df5)
classifier <- naiveBayes(tendency ~ agegroup + employment + gender + marital, data = df5)
test <- unique(df5)
test$Prediction <- predict(classifier, test)
test
classifier <- naiveBayes(tendency ~ agegroup + employment + gender + marital, data = df5)
test <- unique(df7)
require(e1071)
classifier <- naiveBayes(tendency ~ agegroup + employment + gender + marital, data = df5)
test <- unique(df7)
test$Prediction <- predict(classifier, test)
test
view(test)
test
summary(test)
table(test)
df8 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/pima-training-data.csv', header=TRUE)
df9 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/pima-learning-data-public.csv', header=TRUE)
df10 <- read.csv('/users/bcarancibia/CUNY_IS_621/Week3/data/pima-learning-data-private.csv', header=TRUE)
knn <- function(df, k = 5)
{
distance <- as.matrix(dist(df[,1:2]))
predictions <- rep(0, nrow(df))
# For every point in the dataset
for (i in 1:nrow(df))
{
indices <- k.nearest.neighbors(i, distance, k = k)  # Get the nearest neighbors
predictions[i] <- ifelse(mean(df[indices, 'Class']) > 0.5, 1, -1)   # If > 0.5, then this is in class "1"
}
return(predictions)
}
predictions <- knn(df7, 5)
df7$predictions <- predictions
sum(df7$Class != df7$predictions)
predictions <- knn(df7, 5)
df7$predictions <- predictions
sum(df7$Class != df7$predictions)
df8
predictions <- knn(df8, 5)
df8$predictions <- predictions
sum(df8$class != df8$predictions)
warnings(0)
View(df8)
predictions <- knn(df8, 5)
View(df9)
View(df10)
predictions <- knn(df9, 5)
as.numeric(df8)
View(df8)
as.numeric(df9)
lapply(df8, as.numeri)
lapply(df8, as.numeric)
lapply(df9, as.numeric)
predictions <- knn(df8, 5)
sum(df8$class != df8$predictions)
df8$predictions <- predictions
sum(df8$class != df8$predictions)
predictions <- knn(df8, 5)
df8$predictions <- predictions
sum(df8$class != df8$predictions)
knn_predict2 <- knn(df8, k=5)
knn_predict2 <- knn(df9, k=5)
warnings()
knn <- function(df, k = 5)
{
distance <- as.matrix(dist(df[,1:2]))
predictions <- rep(0, nrow(df))
# For every point in the dataset
for (i in 1:nrow(df))
{
indices <- k.nearest.neighbors(i, distance, k = k)  # Get the nearest neighbors
predictions[i] <- ifelse(mean(df[indices, 'class']) > 0.5, 1, 0)   # If > 0.5, then this is in class "1"
}
return(predictions)
}
predictions <- knn(df8, 5)
df8$predictions <- predictions
sum(df8$class != df8$predictions)
knn_predict2 <- knn(df9, k=5)
knn_predict2
knn_predict2 <- knn(df8, k=5)
sum(knn_predict2 != df8$class)
predictions <- knn(df8, 5)
df8$predictions <- predictions
sum(df8$class != df8$predictions)
knn_predict2 <- knn(df8, k=8)
sum(knn_predict2 != df8$class)
predictions <- knn(df8, 10)
df8$predictions <- predictions
sum(df8$class != df8$predictions)
knn_predict2 <- knn(df8, k=10)
sum(knn_predict2 != df8$class)
knn_predict2 <- knn(df8, k=8)
predictions <- knn(df8, 8)
df8$predictions <- predictions
sum(df8$class != df8$predictions)
knn_predict2 <- knn(df8, k=8)
sum(knn_predict2 != df8$class)
civ_amp <- read.csv("/users/bcarancibia/DG_BCA/IATI/CIV/data/civ_amp.csv", header = TRUE)
civ_iati <- read.csv("/users/bcarancibia/DG_BCA/IATI/CIV/data/civ_activity.csv", header = TRUE)
civ_iati_transactions <- read.csv("/users/bcarancibia/DG_BCA/IATI/CIV/data/civ_transaction.csv", header = TRUE)
View(civ_amp)
View(civ_iati)
View(civ_iati)
variance(1/6)
var(1/6)
a <- 1/6
var(a)
3.5*3.5
2*-.05
0.5*2
-1
.25*.25
.25*.25 + .25*.25
cov(1, 2)
x <- rpois(100000, 1)
y <- rpois(100000, 2)
var(3*x^2 - y)
mean(x^4 * y^4)
cov(x, x^2)
var(x^2*y^2)
(1-.01)^109
(1-.1)^109
(1-.01)^109
(1-.001)^109
(1-.01)^109
((1-.01)^109)
((1-.01)^109)*.01
((1-.01)^109)
((1-.01)^109)
1/.01
pnbinom(7-4, 4, 0.5)
50?100
50/100
50/500
0.1*20
(1-0.1)^3
1-(1-0.1)^3
(1/6)^10
((1-(1/30)^30)*.01
)
1/30
1-1/30
(1-1/30)
(1-1/30)^30
(1-1/30)^41
42*0.24
42*0.36
(1-1/15)^41
((1-1/15)^41)
((1-1/15)^41)*42
((1-1/30)^41)*42
1/30
*42
(1/30)*42
(1/15)*42
(1/30) * 42 * 10
6/30
0.2*10
coupon <- function(n){
i <- 0
j <- 1
a = vector(length=n)
a[j] <- sample(1:n,1)
remaining <- c(1:n)[-which(c(1:n) == a[j])]
repeat
{
pick <- sample(remaining,1)
i <- (i+1)
if(any(pick == a))
{
next
}
else
{
j <- (j+1)
a[j] <- pick
}
if(j == n)
{
break
}
}
return(i)
}
mean(replicate(100000,coupon(10)))
sd(replicate(100000,coupon(10)))
wins <- loss <- 0
successprob <- 0.25
series <- function(){
gamecount <- 0
while (wins < 4 && loss < 4){
w <- rbinom(1,1,successprob)
wins <- wins + w
loss <- loss + 1 -w
}
wins + loss
}
mean(replicate(100000, series()))
sd(replicate(100000, series()))
require(dplyr) #data manipulation
require(ggplot2) #plot the data
chad_amp <- read.csv("/users/bcarancibia/DG_BCA/IATI/Chad/data/chad_amp.csv", header = TRUE)
chad_iati <- read.csv("/users/bcarancibia/DG_BCA/IATI/Chad/data/chad_iati_activity.csv", header = TRUE)
chad_iati_transactions <- read.csv("/users/bcarancibia/DG_BCA/IATI/Chad/data/chad_transaction.csv", header = TRUE)
View(chad_iati_transactions)
canada <- subset(chad_iati_transactions, chad_iati_transactions$transaction_provider.org="Canada")
canada <- subset(chad_iati_transactions, chad_iati_transactions$transaction_provider.org=="Canada")
View(canada)
View(chad_iati)
View(chad_iati)
setwd("/users/bcarancibia/CUNY_IS_661/data")
require(dplyr) #data manipulation
require(ggplot2) #plot the data
require(scales)
require(grid)
require(RColorBrewer)
fte_theme <- function() {
# Generate the colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[2]
color.grid.major = palette[3]
color.axis.text = palette[6]
color.axis.title = palette[7]
color.title = palette[9]
# Begin construction of chart
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
# Format the legend, but hide by default
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=7,color=color.axis.title)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(color=color.title, size=10, vjust=1.25)) +
theme(axis.text.x=element_text(size=7,color=color.axis.text)) +
theme(axis.text.y=element_text(size=7,color=color.axis.text)) +
theme(axis.title.x=element_text(size=8,color=color.axis.title, vjust=0)) +
theme(axis.title.y=element_text(size=8,color=color.axis.title, vjust=1.25)) +
# Plot margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.35), "cm"))
}
chad <- read.csv("chad_amp.csv")
civ <- read.csv("civ_amp.csv")
haiti <- read.csv("haiti_amp.csv")
kosovo <- read.csv("kosovo_amp.csv")
madagascar <- read.csv("mada_amp.csv")
malawi <- read.csv("malawi.csv")
moldova <- read.csv("moldova.csv")
timor <- read.csv("timor.csv")
uganda <- read.csv("uganda_amp.csv")
honduras <- read.csv("honduras.csv")
length (chad)
hait)
haita)
haiti)
length (chad)
length(civ)
length(haiti)
length(kosovo)
length(madagascar)
length(malawi)
length(moldova)
length(timor)
length(uganda)
length(honduras)
length (chad)
length(civ)
length(haiti)
length(kosovo)
length(madagascar)
length(malawi)
length(moldova)
length(timor)
length(uganda)
length(honduras)
View(kosovo)
View(chad)
View(chad)
View(civ)
View(haiti)
View(honduras)
View(kosovo)
View(madagascar)
View(malawi)
View(moldova)
View(uganda)
View(timor)
length(which(chad==" "|chad==""))/(269*82)
length(which(civ==" "|civ==""))/(408*88)
length(which(haiti==" "|haiti==""))/(2211*41)
length(which(honduras==" "|honduras==""))/(1033*111)
length(which(kosovo==" "|kosovo==""))/(2185*14)
length(which(madagascar==" "|madagascar==""))/(1142*42)
length(which(malawi==" "|malawi==""))/(773*35)
length(which(moldova==" "|moldova==""))/(377*17)
length(which(timor==" "|timor==""))/(956*82)
length(which(uganda==" "|uganda==""))/(1123*131)
require(dplyr) #data manipulation
require(ggplot2) #plot the data
chad_amp <- read.csv("/users/bcarancibia/DG_BCA/IATI/Chad/data/chad_amp.csv", header = TRUE)
chad_iati <- read.csv("/users/bcarancibia/DG_BCA/IATI/Chad/data/chad_iati_activity.csv", header = TRUE)
chad_iati_transactions <- read.csv("/users/bcarancibia/DG_BCA/IATI/Chad/data/chad_transaction.csv", header = TRUE)
```
View(chad_iati_transactions)
vapply(split(chad_iati_transactions, chad_iati_transactions$reporting.org), function(x) mean(is.na(x)), double(1L))
length(which(chad_iati_transactions$reporting.org==""))
order_summary_donor_iati_transactions
by_donor_iati_transactions <- group_by(chad_iati_transactions, reporting.org)
summary_by_donor_iati_transactions <- summarise(by_donor_iati_transactions, count_each_donor = n(),
total_by_donor = sum(transaction.value))
order_summary_donor_iati_transactions <- summary_by_donor_iati_transactions[order(-summary_by_donor_iati_transactions$total_by_donor),]
head(order_summary_donor_iati_transactions)
order_summary_donor_iati_transactions
View(summary_by_donor_iati_transactions)
transaction_commitments_chad <- group_by(iati_commitments_chad, reporting.org)
summary_trans_commitments_chad <- summarise(transaction_commitments_chad, count_each_donor=n(), total_by_donor=sum(transaction.value))
order_summary_trans_commitments_chad<- summary_trans_commitments_chad[order(-summary_trans_commitments_chad$total_by_donor),]
transaction_disbursements_chad <- group_by(iati_disbursements_chad, reporting.org)
summary_trans_disburse_chad <- summarise(transaction_disbursements_chad, count_each_donor=n(), total_by_donor=sum(transaction.value))
order_summary_trans_disburse_chad<- summary_trans_disburse_chad[order(-summary_trans_disburse_chad$total_by_donor),]
iati_commitments_chad <-  subset(chad_iati_transactions, chad_iati_transactions$transaction.type=='C')
iati_disbursements_chad <-  subset(chad_iati_transactions, chad_iati_transactions$transaction.type=='D')
transaction_commitments_chad <- group_by(iati_commitments_chad, reporting.org)
summary_trans_commitments_chad <- summarise(transaction_commitments_chad, count_each_donor=n(), total_by_donor=sum(transaction.value))
order_summary_trans_commitments_chad<- summary_trans_commitments_chad[order(-summary_trans_commitments_chad$total_by_donor),]
transaction_disbursements_chad <- group_by(iati_disbursements_chad, reporting.org)
summary_trans_disburse_chad <- summarise(transaction_disbursements_chad, count_each_donor=n(), total_by_donor=sum(transaction.value))
order_summary_trans_disburse_chad<- summary_trans_disburse_chad[order(-summary_trans_disburse_chad$total_by_donor),]
View(order_summary_trans_disburse_chad)
View(order_summary_trans_commitments_chad)
by_donor<- group_by(chad_amp, Donor.Agency)
summary_by_donor <- summarise(by_donor, count_each_donor = n(),
total_by_donor = sum(Actual.Disbursements))
order_summary_donor <- summary_by_donor[order(-summary_by_donor$total_by_donor),]
head(order_summary_donor)
order_summary_donor
View(order_summary_donor)
277493741+838,814,415.00
277493741+838814415.00
412390000.00+412656368
civ_amp <- read.csv("/users/bcarancibia/DG_BCA/IATI/CIV/data/civ_amp.csv", header = TRUE)
civ_iati <- read.csv("/users/bcarancibia/DG_BCA/IATI/CIV/data/civ_activity.csv", header = TRUE)
civ_iati_transactions <- read.csv("/users/bcarancibia/DG_BCA/IATI/CIV/data/civ_transaction.csv", header = TRUE)
iati_commitments_civ <-  subset(civ_iati_transactions, civ_iati_transactions$transaction.type=='C')
iati_disbursements_civ <-  subset(civ_iati_transactions, civ_iati_transactions$transaction.type=='D')
transaction_commitments_civ <- group_by(iati_commitments_civ, reporting.org)
summary_trans_commitments_civ <- summarise(transaction_commitments_civ, count_each_donor=n(), total_by_donor=sum(transaction.value))
order_summary_trans_commitments_civ<- summary_trans_commitments_civ[order(-summary_trans_commitments_civ$total_by_donor),]
transaction_disbursements_civ <- group_by(iati_disbursements_civ, reporting.org)
summary_trans_disburse_civ <- summarise(transaction_disbursements_civ, count_each_donor=n(), total_by_donor=sum(transaction.value))
order_summary_trans_disburse_civ<- summary_trans_disburse_civ[order(-summary_trans_disburse_civ$total_by_donor),]
order_summary_trans_disburse_civ
order_summary_trans_commitments_civ
View(order_summary_trans_commitments_civ)
View(order_summary_trans_disburse_civ)
by_donor<- group_by(civ_amp, Donor.Agency)
summary_by_donor <- summarise(by_donor, count_each_donor = n(),
total_by_donor = sum(Actual.Disbursements))
order_summary_donor <- summary_by_donor[order(-summary_by_donor$total_by_donor),]
head(order_summary_donor)
View(order_summary_donor)
1.440146e+09+2012711794
1.938967e+08+19787998
1.938967e+08
1.938967e+08
193896700 + 19787998
7.294394e+07
7.294394e+07
72943940+96728537
