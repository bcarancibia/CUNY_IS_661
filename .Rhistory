add <- sum(civ$Action=="add")
percent.updates <- (updates+add)/nrow(civ)
a/percent.updates
install.packages("strsplit")
strsplit
strsplit(civ$Name, split, fixed=False)
civ$name
civ$Name
is.character(civ$Name)
is.string(civ$Name)
transactions <- read.csv("/users/bcarancibia/transactions_data.csv")
View(transactions)
summary(transactions)
unique(transactions$default.currency)
dim(transactions)
names(transactions)
knitr(names(transactions))
library(ggplot2) #static visualization
library(dplyr) #data manipulation and connect to database
library(knitr)
knitr(names(transactions))
kable(names(transactions))
transactions <- read.csv("/users/bcarancibia/transactions_data.csv", header=TRUE)
kable(names(transactions))
names(transactions)
names(transactions)
nrow(transactions)
data <- subset(transactions, transaction.type =="C" | transaction.type =="D" | transaction.type ==2 | transaction.type == 3)
View(data)
nrow(data)
nrow(transactions) - nrow(data)
write.csv(data, "/users/bcarancibia/transactions_sub.csv", row.names=TRUE)
View(data)
names(data)
data <- data[c("transaction.date","default.currency","transaction.value", "iati.identifier", "reporting.org", "title", "start.planned", "end.planned", "start.actual", "end.actual", "recipient.country", "sector")]
View(data)
write.csv(data, "/users/bcarancibia/transactions_sub.csv", row.names=TRUE)
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
View(data)
data <- data[-1] #remove extra field
View(data)
View(data)
summary(data$transactions.value)
summary(data$transaction.value)
unique(data$default.currency)
data <- data[-2]
data <- subset(data, transaction.value!="NA")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
install.packages('forecast', dependencies = TRUE)
library(forecast)
fit <- ets(data)
fit <- ets(data$transaction.value)
fit
plot(fit)
fit <- auto.arima(data$transaction.value)
fit
plot(fit)
datatimeseries <- ts(data)
datatimeseries
summary(data$transaction.value)
summary(data$transaction.date)
min(data$transaction.date)
data <- as.Date(data$transaction.date, format = "%m/%d/%Y")
data
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.value!="NA")
View(data)
data <- data[-1] #remove extra field
data <- data[-2]
View(data)
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
View(data)
data <- data[-1] #remove extra field
View(data)
data <- data[-2]
View(data)
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!=" ")
data <- subset(data, transaction.date!="")
data1 <- as.Date(data$transaction.date, format = "%m/%d/%Y")
data1
data1 <- as.Date(data$transaction.date, format = "%d/%m/%Y")
data1
View(data)
View(data)
data <- data[-1]#remove extra field
View(data)
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
summary(data$transaction.value)
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
View(data)
data <- data[-1]#remove extra field
View(data)
data <- data[-0]#remove extra field
data <- subset(data, transaction.date!="")
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
summary(data$transaction.value)
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
View(data)
data$transaction.date
class(data$transaction.date)
data$transaction.date <- factor("3/12/15")
as.Date(data$transaction.date, format = "%m/%d/%Y")
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
install.packages("lubridate")
library(lubridate)
data1 <- mdy(data$transaction.date)
data$transaction.date
class(data$transaction.date)
data1 <- mdy(data$transaction.date)
view(data1)
View(data1)
date <- data.frame(matrix(unlist(data1), byrow=T))
View(date)
datatimeseries <- ts(data)
plot.ts(datatimeseries)
datatimeseries <- ts(data$transaction.value)
plot.ts(datatimeseries)
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
data
class(data$transaction.date)
data1 <- mdy(data$transaction.date)
view(data1)
View(data1)
data1 <- as.POSIXct("data$transaction.date", format="%m-%d-%Y")
View(data1)
data1 <- as.POSIXct(data$transaction.date, format="%m-%d-%Y")
View(data1)
data1 <- as.Date(data$transaction.date,format="%m-%d-%Y")
View(data1)
data1 <- as.Date(data$transaction.date, format="%m-%d-%Y")
View(data1)
data1 <- as.Date(data$transaction.date, format="%m/%d/%Y")
View(data1)
rbind(data1, data)
test <- rbind(data1, data)
View(test)
datatimeseries <- ts(data)
View(datatimeseries)
plt <- ggplot(data, aes(transaction.date, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
by.date<- group_by(data, transaction.value)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date <- summary.date[order(-summary.date$total.date),]
head(order.date)
View(order.date)
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date <- summary.date[order(-summary.date$total.date),]
head(order.date)
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
order.date <- summary.date[order(-summary.date$count.date),]
knitr::kable(head(order.date.total))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
plt <- ggplot(summary.date, aes(transaction.date, total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
summary.date.ts <- ts(summary.date)
summmary.date.ts
summary.date.ts
plot(summary.date.ts)
View(summary.date)
summary.date <- summary.date[order(-summar.date$transaction.date)]
summary.date <- summary.date[order(-summary.date$transaction.date)]
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
summary.date <- summary.date[order(-summary.date$transaction.date)]
summary.date <- summary.date[order(summary.date$transaction.date)]
summary.date
View(summary.date)
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
View(summary.date)
test <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
View(test)
tail(test)
data <- read.csv("/users/bcarancibia/transactions.countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
datadata <- subset(data, transaction.date!="")
data <- subset(data, transaction.date!="")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
test <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
View(test)
tail(test)
summary.date <- <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
plt <- ggplot(summary.date, aes(transaction.date, total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
summary.date <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
View(summary.date)
plt <- ggplot(summary.date, aes(as.character(transaction.date), total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
fit <- kmeans(summary.date, 5)
aggregate(summary.date,by=list(fit$cluster),FUN=mean)
fit
plot(fit)
fit <- kmeans(summary.date$transaction.date, 5)
fit <- kmeans(summary.date$transaction.date, 2)
fit <- kmeans(summary.date$transaction.date, 2)
fit
fit <- kmeans(summary.date$transaction.value)
summary.date
fit <- kmeans(summary.date$count.date)
fit <- kmeans(summary.date$count.date, 5)
fit
aggregate(summary.date,by=list(fit$cluster),FUN=mean)
fit <- kmeans(data$transaction.value, 5)
aggregate(data$transaction.value,by=list(fit$cluster),FUN=mean)
data.cluster <- data.frame(data, fit$cluster)
data.cluster
View(cluster)
View(data.cluster)
plot(data.cluster$fit.cluster)
install.packages("cluster")
library(cluster)
install.packages("fpc")
library(fpc)
cluster <- kmeans(data$transaction.value, centers=5)
clus <- kmeans(data$transaction.value, centers=5)
plotcluster(data, clus$cluster)
fit <- kmeans(data$transaction.value, 5)
View(data.cluster)
plotcluster(data.cluster, fit.cluster)
plotcluster(data.cluster, data.cluster$fit.cluster)
clus <- kmeans(data$transaction.value, centers=3)
View(clus)
clus
plotcluster(data, clus$cluster)
plotcluster(data$transaction.value, clus$cluster)
clusplot(data$transaction.value, clus$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
clusplot(data$transaction.value, clus$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
install.packages(mclust)
install.packages("mclust")
library(mclust)
fit1 <- Mclust(data)
plot(fit1)
fit1 <- Mclust(data$transaction.value)
fit1 <- Mclust(data)
fit1 <- Mclust(summary.date)
fit1
fit1 <- kmeans(mydata, 5)
fit1 <- kmeans(data, 5)
fit1 <- kmeans(data$transaction.value, 5)
fit1
View(fit1)
clusplot(data$transaction.value, fit1$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
clus <- kmeans(data$transaction.value, centers=5)
plotcluster(data$transaction.value, clus$cluster)
plotcluster(mydata, fit$cluster)
library(ggplot2) #static visualization
library(dplyr) #data manipulation and connect to database
library(knitr)
library("devtools") #needed to install plotly if you don't have it already
library(plotly) #interactive visualization
library(forecast)
library(lubridate)
library(cluster)
library(fpc)
py <- plotly(username="bcarancibia", key="1960rm8f1b")
set_credentials_file("bcarancibia", "1960rm8f1b")
transactions <- read.csv("/users/bcarancibia/transactions_data.csv", header=TRUE)
nrow(transactions)
data <- subset(transactions, transaction.type =="C" | transaction.type =="D" | transaction.type ==2 | transaction.type == 3)
nrow(data)
nrow(transactions) - nrow(data)
data <- data[c("transaction.date","transaction.value", "iati.identifier", "reporting.org", "title", "start.planned", "end.planned", "start.actual", "end.actual", "recipient.country", "sector")]
data <- read.csv("/users/bcarancibia/transactions.countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
summary.date <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
plt <- ggplot(summary.date, aes(as.character(transaction.date), total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
clus <- kmeans(data$transaction.value, centers=4)
plotcluster(data$transaction.value, clus$cluster)
a<-predict(lm(data$transaction.value ~ data$reporting.org))
plot(a)
fit <- princomp(data, cor=TRUE)
fit <- factanal(dataa, 3, rotation="varimax")
fit <- factanal(data, 3, rotation="varimax")
View(summary.date)
fit <- princomp(summary.date, cor=TRUE)
m <- cor(data)
data
View(data)
View(data)
drop(data$row.names)
(-data$row.names)
m <- cor(summary.date)
mylogit <- glm(data$transaction.value ~ data$reporting.org + data$recipient.country, data = data, family = "binomial")
myts <- ts(summary.date)
monthplot(myts)
plot(myts)
myts <- ts(data)
myts <- ts(data$transaction.value)
monthplot(myts)
seasonplot(myts)
fit1 <- stl(myts, s.window="period")
mylogit <- glm(data$transaction.value ~ data$reporting.org + data$recipient.country, data = data, family =binomial())
data_test <- subset(data, transaction.value>=0)
mylogit <- glm(data_test$transaction.value ~ data_test$reporting.org + data_test$recipient.country, data = data_test, family =binomial())
mylogit <- lm(data_test$transaction.value ~ data_test$reporting.org + data_test$recipient.country, data = data_test, family =binomial())
mylogit <- lm(data_test$transaction.value ~ data_test$reporting.org + data_test$recipient.country, data = data_test)
mylogit
plot(mylogit)
summary(lm)
lm <- lm(data$transaction.value ~ data$reporting.org + data$recipient.country, data=data)
summary(lm)
knitr::kable(summary(lm))
rm(list = ls())
library(ggplot2) #static visualization
library(dplyr) #data manipulation and connect to database
library(knitr)
library("devtools") #needed to install plotly if you don't have it already
library(plotly) #interactive visualization
library(forecast)
library(lubridate)
library(cluster)
library(fpc)
py <- plotly(username="bcarancibia", key="1960rm8f1b")
set_credentials_file("bcarancibia", "1960rm8f1b")
data <- read.csv("/users/bcarancibia/transactions.countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
summary.date <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
lm <- lm(data$transaction.value ~ data$reporting.org + data$recipient.country, data=data)
lm.date <- lm(data$transaction.value ~ data$transaction.date, data=data)
summary(lm.date)
getOption("max.print")
getOption("max.print")
library(ggplot2) #static visualization
library(dplyr) #data manipulation and connect to database
library(knitr)
library("devtools") #needed to install plotly if you don't have it already
library(plotly) #interactive visualization
py <- plotly(username="bcarancibia", key="1960rm8f1b")
set_credentials_file("bcarancibia", "1960rm8f1b")
setwd("/users/bcarancibia/CUNY_IS_661/")
db <- src_sqlite('/users/bcarancibia/CUNY_IS_661/transactions.db', create = FALSE)
db
data.clean <- tbl(db, 'transclean')
data.clean <- tbl(db, sql('SELECT "transaction.value" AS transvalue,
SUBSTR("transaction.date", 7, 4) || "-" ||
SUBSTR("transaction.date", 4, 2) || "-" ||
SUBSTR("transaction.date", 1, 2) as "transactiondate", "iati.identifier" AS id, "reporting.org" AS "reporter", title,
SUBSTR("start.planned", 7, 4) || "-" ||
SUBSTR("start.planned", 4, 2) || "-" ||
SUBSTR("start.planned", 1, 2) as "startplanned",
SUBSTR("end.planned", 7, 4) || "-" ||
SUBSTR("end.planned", 4, 2) || "-" ||
SUBSTR("end.planned", 1, 2) as "endplanned",
SUBSTR("start.actual", 7, 4) || "-" ||
SUBSTR("start.actual", 4, 2) || "-" ||
SUBSTR("start.actual", 1, 2) as "startactual",
SUBSTR("end.actual", 7, 4) || "-" ||
SUBSTR("end.actual", 4, 2) || "-" ||
SUBSTR("end.actual", 1, 2) as "endactual",
"recipient.country" AS recipient, "recipient.country.code" AS countrycode, sector
FROM transclean'))
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Chad") %>%
mutate(year = strftime('%Y', transactiondate))
chad<- collect(q)
chad$transvalue <- as.numeric(chad$transvalue)
by.year <- group_by(chad, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue))
View(summary.year)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Burkina Faso") %>%
mutate(year = strftime('%Y', transactiondate))
burkina <- collect(q)
burkina$transvalue <- as.numeric(burkina$transvalue)
by.year <- group_by(burkina, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue)
)
View(summary.year)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Chad") %>%
mutate(year = strftime('%Y', transactiondate))
chad<- collect(q)
chad$transvalue <- as.numeric(chad$transvalue)
by.year <- group_by(chad, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue))
View(summary.year)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Congo The Democratic Republic Of The") %>%
mutate(year = strftime('%Y', transactiondate))
congo<- collect(q)
congo$transvalue <- as.numeric(congo$transvalue)
by.year <- group_by(congo, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue))
View(summary.year)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Cote D'Ivoire") %>%
mutate(year = strftime('%Y', transactiondate))
civ<- collect(q)
civ$transvalue <- as.numeric(civ$transvalue)
by.year <- group_by(civ, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue))
View(summary.year)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Chad") %>%
mutate(year = strftime('%Y', transactiondate))
chad<- collect(q)
chad$transvalue <- as.numeric(chad$transvalue)
by.year <- group_by(chad, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue))
View(summary.year)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Ethiopia") %>%
mutate(year = strftime('%Y', transactiondate))
ethiopia<- collect(q)
ethiopia$transvalue <- as.numeric(ethiopia$transvalue)
by.year <- group_by(ethiopia, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue))
View(summary.year)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Haiti") %>%
mutate(year = strftime('%Y', transactiondate))
haiti<- collect(q)
haiti$transvalue <- as.numeric(haiti$transvalue)
by.year <- group_by(haiti, year)
summary.year <- summarise(by.year, count.year = n(),
total.year = sum(transvalue))
View(summary.year)
