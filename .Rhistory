data <- subset(data, transaction.value!="NA")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
install.packages('forecast', dependencies = TRUE)
library(forecast)
fit <- ets(data)
fit <- ets(data$transaction.value)
fit
plot(fit)
fit <- auto.arima(data$transaction.value)
fit
plot(fit)
datatimeseries <- ts(data)
datatimeseries
summary(data$transaction.value)
summary(data$transaction.date)
min(data$transaction.date)
data <- as.Date(data$transaction.date, format = "%m/%d/%Y")
data
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.value!="NA")
View(data)
data <- data[-1] #remove extra field
data <- data[-2]
View(data)
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
View(data)
data <- data[-1] #remove extra field
View(data)
data <- data[-2]
View(data)
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!=" ")
data <- subset(data, transaction.date!="")
data1 <- as.Date(data$transaction.date, format = "%m/%d/%Y")
data1
data1 <- as.Date(data$transaction.date, format = "%d/%m/%Y")
data1
View(data)
View(data)
data <- data[-1]#remove extra field
View(data)
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
summary(data$transaction.value)
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
View(data)
data <- data[-1]#remove extra field
View(data)
data <- data[-0]#remove extra field
data <- subset(data, transaction.date!="")
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
summary(data$transaction.value)
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
View(data)
data$transaction.date
class(data$transaction.date)
data$transaction.date <- factor("3/12/15")
as.Date(data$transaction.date, format = "%m/%d/%Y")
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
install.packages("lubridate")
library(lubridate)
data1 <- mdy(data$transaction.date)
data$transaction.date
class(data$transaction.date)
data1 <- mdy(data$transaction.date)
view(data1)
View(data1)
date <- data.frame(matrix(unlist(data1), byrow=T))
View(date)
datatimeseries <- ts(data)
plot.ts(datatimeseries)
datatimeseries <- ts(data$transaction.value)
plot.ts(datatimeseries)
data <- read.csv("/users/bcarancibia/transactions_countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
data
class(data$transaction.date)
data1 <- mdy(data$transaction.date)
view(data1)
View(data1)
data1 <- as.POSIXct("data$transaction.date", format="%m-%d-%Y")
View(data1)
data1 <- as.POSIXct(data$transaction.date, format="%m-%d-%Y")
View(data1)
data1 <- as.Date(data$transaction.date,format="%m-%d-%Y")
View(data1)
data1 <- as.Date(data$transaction.date, format="%m-%d-%Y")
View(data1)
data1 <- as.Date(data$transaction.date, format="%m/%d/%Y")
View(data1)
rbind(data1, data)
test <- rbind(data1, data)
View(test)
datatimeseries <- ts(data)
View(datatimeseries)
plt <- ggplot(data, aes(transaction.date, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
by.date<- group_by(data, transaction.value)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date <- summary.date[order(-summary.date$total.date),]
head(order.date)
View(order.date)
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date <- summary.date[order(-summary.date$total.date),]
head(order.date)
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
order.date <- summary.date[order(-summary.date$count.date),]
knitr::kable(head(order.date.total))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
plt <- ggplot(summary.date, aes(transaction.date, total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
summary.date.ts <- ts(summary.date)
summmary.date.ts
summary.date.ts
plot(summary.date.ts)
View(summary.date)
summary.date <- summary.date[order(-summar.date$transaction.date)]
summary.date <- summary.date[order(-summary.date$transaction.date)]
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
summary.date <- summary.date[order(-summary.date$transaction.date)]
summary.date <- summary.date[order(summary.date$transaction.date)]
summary.date
View(summary.date)
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
View(summary.date)
test <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
View(test)
tail(test)
data <- read.csv("/users/bcarancibia/transactions.countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
datadata <- subset(data, transaction.date!="")
data <- subset(data, transaction.date!="")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
knitr::kable(head(order.date))
knitr::kable(head(order.date.total))
test <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
View(test)
tail(test)
summary.date <- <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
plt <- ggplot(summary.date, aes(transaction.date, total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
summary.date <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
View(summary.date)
plt <- ggplot(summary.date, aes(as.character(transaction.date), total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
fit <- kmeans(summary.date, 5)
aggregate(summary.date,by=list(fit$cluster),FUN=mean)
fit
plot(fit)
fit <- kmeans(summary.date$transaction.date, 5)
fit <- kmeans(summary.date$transaction.date, 2)
fit <- kmeans(summary.date$transaction.date, 2)
fit
fit <- kmeans(summary.date$transaction.value)
summary.date
fit <- kmeans(summary.date$count.date)
fit <- kmeans(summary.date$count.date, 5)
fit
aggregate(summary.date,by=list(fit$cluster),FUN=mean)
fit <- kmeans(data$transaction.value, 5)
aggregate(data$transaction.value,by=list(fit$cluster),FUN=mean)
data.cluster <- data.frame(data, fit$cluster)
data.cluster
View(cluster)
View(data.cluster)
plot(data.cluster$fit.cluster)
install.packages("cluster")
library(cluster)
install.packages("fpc")
library(fpc)
cluster <- kmeans(data$transaction.value, centers=5)
clus <- kmeans(data$transaction.value, centers=5)
plotcluster(data, clus$cluster)
fit <- kmeans(data$transaction.value, 5)
View(data.cluster)
plotcluster(data.cluster, fit.cluster)
plotcluster(data.cluster, data.cluster$fit.cluster)
clus <- kmeans(data$transaction.value, centers=3)
View(clus)
clus
plotcluster(data, clus$cluster)
plotcluster(data$transaction.value, clus$cluster)
clusplot(data$transaction.value, clus$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
clusplot(data$transaction.value, clus$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
install.packages(mclust)
install.packages("mclust")
library(mclust)
fit1 <- Mclust(data)
plot(fit1)
fit1 <- Mclust(data$transaction.value)
fit1 <- Mclust(data)
fit1 <- Mclust(summary.date)
fit1
fit1 <- kmeans(mydata, 5)
fit1 <- kmeans(data, 5)
fit1 <- kmeans(data$transaction.value, 5)
fit1
View(fit1)
clusplot(data$transaction.value, fit1$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
clus <- kmeans(data$transaction.value, centers=5)
plotcluster(data$transaction.value, clus$cluster)
plotcluster(mydata, fit$cluster)
library(ggplot2) #static visualization
library(dplyr) #data manipulation and connect to database
library(knitr)
library("devtools") #needed to install plotly if you don't have it already
library(plotly) #interactive visualization
library(forecast)
library(lubridate)
library(cluster)
library(fpc)
py <- plotly(username="bcarancibia", key="1960rm8f1b")
set_credentials_file("bcarancibia", "1960rm8f1b")
transactions <- read.csv("/users/bcarancibia/transactions_data.csv", header=TRUE)
nrow(transactions)
data <- subset(transactions, transaction.type =="C" | transaction.type =="D" | transaction.type ==2 | transaction.type == 3)
nrow(data)
nrow(transactions) - nrow(data)
data <- data[c("transaction.date","transaction.value", "iati.identifier", "reporting.org", "title", "start.planned", "end.planned", "start.actual", "end.actual", "recipient.country", "sector")]
data <- read.csv("/users/bcarancibia/transactions.countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
plt <- ggplot(data, aes(recipient.country, transaction.value)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
summary.date <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
plt <- ggplot(summary.date, aes(as.character(transaction.date), total.date)) +
geom_bar(stat = 'identity') +
theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
clus <- kmeans(data$transaction.value, centers=4)
plotcluster(data$transaction.value, clus$cluster)
a<-predict(lm(data$transaction.value ~ data$reporting.org))
plot(a)
fit <- princomp(data, cor=TRUE)
fit <- factanal(dataa, 3, rotation="varimax")
fit <- factanal(data, 3, rotation="varimax")
View(summary.date)
fit <- princomp(summary.date, cor=TRUE)
m <- cor(data)
data
View(data)
View(data)
drop(data$row.names)
(-data$row.names)
m <- cor(summary.date)
mylogit <- glm(data$transaction.value ~ data$reporting.org + data$recipient.country, data = data, family = "binomial")
myts <- ts(summary.date)
monthplot(myts)
plot(myts)
myts <- ts(data)
myts <- ts(data$transaction.value)
monthplot(myts)
seasonplot(myts)
fit1 <- stl(myts, s.window="period")
mylogit <- glm(data$transaction.value ~ data$reporting.org + data$recipient.country, data = data, family =binomial())
data_test <- subset(data, transaction.value>=0)
mylogit <- glm(data_test$transaction.value ~ data_test$reporting.org + data_test$recipient.country, data = data_test, family =binomial())
mylogit <- lm(data_test$transaction.value ~ data_test$reporting.org + data_test$recipient.country, data = data_test, family =binomial())
mylogit <- lm(data_test$transaction.value ~ data_test$reporting.org + data_test$recipient.country, data = data_test)
mylogit
plot(mylogit)
summary(lm)
lm <- lm(data$transaction.value ~ data$reporting.org + data$recipient.country, data=data)
summary(lm)
knitr::kable(summary(lm))
rm(list = ls())
library(ggplot2) #static visualization
library(dplyr) #data manipulation and connect to database
library(knitr)
library("devtools") #needed to install plotly if you don't have it already
library(plotly) #interactive visualization
library(forecast)
library(lubridate)
library(cluster)
library(fpc)
py <- plotly(username="bcarancibia", key="1960rm8f1b")
set_credentials_file("bcarancibia", "1960rm8f1b")
data <- read.csv("/users/bcarancibia/transactions.countries.csv", header=TRUE, stringsAsFactors=FALSE)
data <- data[-1] #remove extra field
data <- data[-2]
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
by.date<- group_by(data, transaction.date)
summary.date <- summarise(by.date, count.date = n(),
total.date = sum(transaction.value))
order.date.total <- summary.date[order(-summary.date$total.date),]
order.date <- summary.date[order(-summary.date$count.date),]
summary.date <- summary.date[order(as.Date(summary.date$transaction.date, format="%m/%d/%Y")),]
lm <- lm(data$transaction.value ~ data$reporting.org + data$recipient.country, data=data)
lm.date <- lm(data$transaction.value ~ data$transaction.date, data=data)
summary(lm.date)
getOption("max.print")
getOption("max.print")
library(ggplot2) #static visualization
library(dplyr) #data manipulation and connect to database
library(knitr)
library("devtools") #needed to install plotly if you don't have it already
library(plotly) #interactive visualization
py <- plotly(username="bcarancibia", key="1960rm8f1b")
set_credentials_file("bcarancibia", "1960rm8f1b")
setwd("/users/bcarancibia/CUNY_IS_661/")
transactions <- read.csv("/users/bcarancibia/CUNY_IS_661/transaction.csv", header=TRUE)
data <- subset(transactions, transaction.type =="C" | transaction.type =="D" | transaction.type ==2 | transaction.type == 3)
data <- data[c("transaction.date","transaction.value", "iati.identifier", "reporting.org", "title", "start.planned", "end.planned", "start.actual", "end.actual", "recipient.country","recipient.country.code", "sector")]
data$recipient.country<- as.character(data$recipient.country)
data$recipient.country[data$recipient.country == "Lao People'S Democratic Republic"] <- "Laos"
data <- subset(data, recipient.country=="Chad"|recipient.country=="Ethiopia"|recipient.country=="Nepal"|recipient.country=="Honduras"|recipient.country=="Senegal"|recipient.country=="Haiti"|recipient.country=="Burkina Faso"| recipient.country=="Burkina Faso"|recipient.country=="Tanzania, United Republic Of"|recipient.country=="Laos"|recipient.country=="Malawi"|recipient.country=="Moldova, Republic of"| recipient.country=="Madagascar"|recipient.country=="Uganda"|recipient.country=="Timor-Leste"|recipient.country=="Congo, The Democratic Republic Of The"|recipient.country=="Kyrgyzstan"|recipient.country.code=="CI")
data <- subset(data, transaction.value!="NA")
data <- subset(data, transaction.date!="")
db <- src_sqlite('/users/bcarancibia/CUNY_IS_661/transactions.db', create = FALSE)
db
data.clean <- tbl(db, 'transclean')
data.clean <- tbl(db, sql('SELECT "transaction.value" AS transvalue,
data.clean <- tbl(db, sql('SELECT "transaction.value" AS transvalue,
SUBSTR("transaction.date", 7, 4) || "-" ||
SUBSTR("transaction.date", 4, 2) || "-" ||
SUBSTR("transaction.date", 1, 2) as "transactiondate", "iati.identifier" AS id, "reporting.org" AS "reporter", title,
SUBSTR("start.planned", 7, 4) || "-" ||
SUBSTR("start.planned", 4, 2) || "-" ||
SUBSTR("start.planned", 1, 2) as "startplanned",
SUBSTR("end.planned", 7, 4) || "-" ||
SUBSTR("end.planned", 4, 2) || "-" ||
SUBSTR("end.planned", 1, 2) as "endplanned",
SUBSTR("start.actual", 7, 4) || "-" ||
SUBSTR("start.actual", 4, 2) || "-" ||
SUBSTR("start.actual", 1, 2) as "startactual",
SUBSTR("end.actual", 7, 4) || "-" ||
SUBSTR("end.actual", 4, 2) || "-" ||
SUBSTR("end.actual", 1, 2) as "endactual",
"recipient.country" AS recipient, "recipient.country.code" AS countrycode, sector
FROM transclean'))
data.clean <- tbl(db, sql('SELECT "transaction.value" AS transvalue,
SUBSTR("transaction.date", 7, 4) || "-" ||
SUBSTR("transaction.date", 4, 2) || "-" ||
SUBSTR("transaction.date", 1, 2) as "transactiondate", "iati.identifier" AS id, "reporting.org" AS "reporter", title,
SUBSTR("start.planned", 7, 4) || "-" ||
SUBSTR("start.planned", 4, 2) || "-" ||
SUBSTR("start.planned", 1, 2) as "startplanned",
SUBSTR("end.planned", 7, 4) || "-" ||
SUBSTR("end.planned", 4, 2) || "-" ||
SUBSTR("end.planned", 1, 2) as "endplanned",
SUBSTR("start.actual", 7, 4) || "-" ||
SUBSTR("start.actual", 4, 2) || "-" ||
SUBSTR("start.actual", 1, 2) as "startactual",
SUBSTR("end.actual", 7, 4) || "-" ||
SUBSTR("end.actual", 4, 2) || "-" ||
SUBSTR("end.actual", 1, 2) as "endactual",
"recipient.country" AS recipient, "recipient.country.code" AS countrycode, sector
FROM transclean'))
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Nepal") %>%
mutate(year = strftime('%Y', transactiondate))
nepal.three.ave <- subset(q, year>=2012)
q <- data.clean %>% select(transvalue, recipient, transactiondate) %>%
filter(recipient == "Nepal") %>%
mutate(year = strftime('%Y', transactiondate))
q <- collect(q)
nepal.three.ave <- subset(q, year>=2012)
nepal.three.ave$transvalue<-as.numeric(nepal.three.ave$transvalue)
lm(nepal.three.ave)
lm(nepal.three.ave~year)
nepal.three.ave
lm(nepal.three.ave ~ nepal.three.ave$year)
lm(nepal.three.ave$transvalue ~ nepal.three.ave$year)
plt <- ggplot(na.omit(nepal.three.ave), aes(year, transvalue)) +
geom_bar(stat='identity', fill = "steelblue") +
geom_abline(intercept = 12293655)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt
dbinom(3, 10, 0.3) #dbinom(k, n, p)
a<-10*.30
sd(a)
a
sd(3)
sqrt(10*.3*(1-.3))
dhyper(3, 12, 8, 10) #dhyper(x, n-success, sucess, trials)
dhyper(3, 8, 12, 10) #dhyper(x, n-success, sucess, trials)
dhyper(3, 8, 12, 10) #dhyper(x, success, n-sucess, trials) (x,m,n,k)
10*(8/20)
sqrt(10*(8/20)*(1-(8/20))*((20-10)/(20-1)))
dhyper(3, 24, 36, 10)
10*(24/36)
sqrt(10*(24/60)*(1-(24/60))*((60-20)/(60-1)))
dbinom(40, 400, 0.3) #dbinom(k, n, p)
dbinom(40, 40, 0.3) #dbinom(k, n, p)
dbinom(40, 400, 0.3) #dbinom(k, n, p)
dbinom(40, 400, 0.4) #dbinom(k, n, p)
dbinom(2, 400, 0.4) #dbinom(k, n, p)
dbinom(100, 400, 0.4) #dbinom(k, n, p)
dbinom(500, 400, 0.4) #dbinom(k, n, p)
dbinom(300, 400, 0.4) #dbinom(k, n, p)
dbinom(200, 400, 0.4) #dbinom(k, n, p)
dbinom(100, 400, 0.4) #dbinom(k, n, p)
dbinom(150, 400, 0.4) #dbinom(k, n, p)
dbinom(150, 900, 0.4) #dbinom(k, n, p)
dbinom(4, 40, 0.4) #dbinom(k, n, p)
dbinom(4, 50, 0.4) #dbinom(k, n, p)
dbinom(4, 60, 0.4) #dbinom(k, n, p)
dbinom(5, 60, 0.4) #dbinom(k, n, p)
dbinom(2, 60, 0.4) #dbinom(k, n, p)
dbinom(4, 5, 0.5) #dbinom(k, n, p)
dbinom(7,8,0)
dbinom(7,8,0.05)
dbinom(7,8,.30)
dbinom(7,8,0)
dbinom(7,8,.25)
dbinom(7,8,0.5)
dbinom(7,8,.75)
dbinom(7,8,1)
dbinom(7,8,1)
0.0003662109*.30
0.03125* 0.2669678
0.03125*.30
0.2669678*.3
0.0001098633+0.009375+0.08009034
0.0001098633/0.0895752
0.009375/0.0895752
0.08009034/0.0895752
![Table 2](/users/bcarancibia/CUNY_IS_606/Final/question2.png)
dbinom(5,6,.25)
dbinom(5,6,.50)
dbinom(5,6,.75)
0.001226492*0.004394531
0.1046607*0.09375
0.8941129*0.355957
5.389857e-06+0.009811941+0.3182657
5.389857e-06/0.328083
0.009811941/0.328083
0.3182657/0.328083
dbinom(12,14,0)
dbinom(12,14,.25)
dbinom(12,14,.50)
dbinom(12,14,.75)
dbinom(12,14,1)
3.051013e-06*.30
0.005554199*.30
0.1801593*.3
9.153039e-07+0.00166626+0.05404779
9.153039e-07/0.05571497
0.00166626/0.05571497
0.05404779/0.05571497
